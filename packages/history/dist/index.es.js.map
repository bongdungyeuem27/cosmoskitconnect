{"version":3,"file":"index.es.js","sources":["../src/utils.ts"],"sourcesContent":["import { RegisterPayload, GetMessagesPayload, GetMessagesResponse } from \"./types\";\nimport fetch from \"isomorphic-unfetch\";\nimport type { ICore } from \"@cosmoskitconnect/types\";\n\nexport const DEFAULT_HISTORY_URL = \"https://history.walletconnect.com\";\n\nexport const DAY_IN_MS = 86400 * 1000;\n\nexport class HistoricalMessages {\n  // eslint-disable-next-line no-useless-constructor\n  public constructor(private core: ICore, public messageResponse: GetMessagesResponse) {}\n\n  public async injectIntoRelayer() {\n    const { messages, topic } = this.messageResponse;\n    for (const { message } of messages) {\n      if (this.core.relayer.messages.has(topic, message)) {\n        continue;\n      }\n\n      await this.core.relayer.messages.set(topic, message);\n\n      this.core.relayer.events.emit(\"relayer_message\", {\n        topic,\n        publishedAt: Date.now(),\n        message,\n      });\n    }\n  }\n}\n\nexport class HistoryClient {\n  private jwt = \"\";\n\n  // eslint-disable-next-line no-useless-constructor\n  public constructor(private core: ICore, private readonly historyUrl = DEFAULT_HISTORY_URL) {}\n\n  public async registerTags(payload: RegisterPayload, historyUrl = DEFAULT_HISTORY_URL) {\n    try {\n      await fetch(`${historyUrl}/register`, {\n        method: \"POST\",\n        body: JSON.stringify(payload),\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${await this.getJwt()}`,\n        },\n      });\n    } catch (e) {\n      throw new Error(`[HistoryClient] Failed to register tags: ${JSON.stringify(e)}`);\n    }\n  }\n\n  public async getMessages(payload: GetMessagesPayload, historyUrl = DEFAULT_HISTORY_URL) {\n    const entries = Object.entries(payload).map(([key, value]) => [key, value.toString()]);\n    const params = new URLSearchParams(entries);\n\n    try {\n      const url = `${historyUrl}/messages?${params.toString()}`;\n      const rs: GetMessagesResponse = await (\n        await fetch(url, {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        })\n      ).json();\n\n      return new HistoricalMessages(this.core, rs);\n    } catch (e) {\n      throw new Error(`[HistoryClient] Failed to fetch messages: ${JSON.stringify(e)}`);\n    }\n  }\n\n  public async getJwt() {\n    if (this.jwt) return this.jwt;\n\n    this.jwt = await this.core.crypto.signJWT(this.historyUrl);\n\n    return this.jwt;\n  }\n}\n"],"names":["core","messageResponse","messages","topic","message","historyUrl","payload","fetch","e","entries","key","value","params","url","rs"],"mappings":"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"}