import q from"is-typedarray";import C from"typedarray-to-buffer";const m="hex",b="utf8",D="binary",G="buffer",J="array",K="typed-array",M="array-buffer",u="0";function i(n){return new Uint8Array(n)}function p(n,t=!1){const r=n.toString(m);return t?T(r):r}function x(n){return n.toString(b)}function N(n){return n.readUIntBE(0,n.length)}function O(n){return c(i(n))}function o(n){return C(n)}function L(n,t=!1){return p(o(n),t)}function S(n){return x(o(n))}function g(n){return N(o(n))}function c(n){return Array.from(n).map(f).join("")}function B(n){return Buffer.from(s(n),m)}function h(n){return i(B(n))}function Q(n){return x(B(n))}function V(n){return g(h(n))}function $(n){return c(h(n))}function A(n){return Buffer.from(n,b)}function R(n){return i(A(n))}function X(n,t=!1){return p(A(n),t)}function Y(n){const t=parseInt(n,10);return hn(Bn(t),"Number can only safely store up to 53 bits"),t}function _(n){return c(R(n))}function nn(n){return j(f(n))}function tn(n){return e(f(n))}function rn(n,t){return l(f(n),t)}function en(n){return`${n}`}function f(n){const t=(n>>>0).toString(2);return y(t)}function j(n){return o(e(n))}function e(n){return new Uint8Array(H(n).map(t=>parseInt(t,2)))}function l(n,t){return L(e(n),t)}function un(n){return S(e(n))}function on(n){return g(e(n))}function v(n){return!(typeof n!="string"||!new RegExp(/^[01]+$/).test(n)||n.length%8!==0)}function I(n,t){return!(typeof n!="string"||!n.match(/^0x[0-9A-Fa-f]*$/)||t&&n.length!==2+2*t)}function a(n){return Buffer.isBuffer(n)}function d(n){return q.strict(n)&&!a(n)}function W(n){return!d(n)&&!a(n)&&typeof n.byteLength<"u"}function fn(n){return a(n)?G:d(n)?K:W(n)?M:Array.isArray(n)?J:typeof n}function cn(n){return v(n)?D:I(n)?m:b}function an(...n){return Buffer.concat(n)}function yn(...n){let t=[];return n.forEach(r=>t=t.concat(Array.from(r))),new Uint8Array([...t])}function sn(n,t){const r=n.length-t;return r>0&&(n=n.slice(r)),n}function Tn(n,t){return n.slice(0,t)}function z(n,t=8){const r=n%t;return r?(n-r)/t*t+t:n}function H(n,t=8){const r=y(n).match(new RegExp(`.{${t}}`,"gi"));return Array.from(r||[])}function P(n){return H(n).map(An).join("")}function mn(n){return l(P($(n)))}function y(n,t=8,r=u){return F(n,z(n.length,t),r)}function F(n,t,r=u){return Z(n,t,!0,r)}function bn(n,t,r=u){return Z(n,t,!1,r)}function s(n){return n.replace(/^0x/,"")}function T(n){return n.startsWith("0x")?n:`0x${n}`}function pn(n){return n=s(n),n=y(n,2),n&&(n=T(n)),n}function xn(n){const t=n.startsWith("0x");return n=s(n),n=n.startsWith(u)?n.substring(1):n,t?T(n):n}function gn(n){return typeof n>"u"}function Bn(n){return!gn(n)}function hn(n,t){if(!n)throw new Error(t)}function An(n){return n.split("").reverse().join("")}function Z(n,t,r,k=u){const U=t-n.length;let w=n;if(U>0){const E=k.repeat(U);w=r?E+n:n+E}return w}export{T as addHexPrefix,c as arrayToBinary,o as arrayToBuffer,L as arrayToHex,g as arrayToNumber,S as arrayToUtf8,e as binaryToArray,j as binaryToBuffer,l as binaryToHex,on as binaryToNumber,un as binaryToUtf8,i as bufferToArray,O as bufferToBinary,p as bufferToHex,N as bufferToNumber,x as bufferToUtf8,z as calcByteLength,yn as concatArrays,an as concatBuffers,cn as getEncoding,fn as getType,h as hexToArray,$ as hexToBinary,B as hexToBuffer,V as hexToNumber,Q as hexToUtf8,W as isArrayBuffer,v as isBinaryString,a as isBuffer,I as isHexString,d as isTypedArray,tn as numberToArray,f as numberToBinary,nn as numberToBuffer,rn as numberToHex,en as numberToUtf8,F as padLeft,bn as padRight,xn as removeHexLeadingZeros,s as removeHexPrefix,y as sanitizeBytes,pn as sanitizeHex,H as splitBytes,P as swapBytes,mn as swapHex,sn as trimLeft,Tn as trimRight,R as utf8ToArray,_ as utf8ToBinary,A as utf8ToBuffer,X as utf8ToHex,Y as utf8ToNumber};
//# sourceMappingURL=index.es.js.map
