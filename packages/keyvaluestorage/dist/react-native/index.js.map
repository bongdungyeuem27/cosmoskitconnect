{"version":3,"file":"index.js","sources":["../../../safe-json/dist/index.es.js","../../src/shared/utils.ts","../../src/react-native/index.ts"],"sourcesContent":["const s=n=>JSON.stringify(n,(t,e)=>typeof e==\"bigint\"?e.toString()+\"n\":e),i=n=>{const t=new RegExp('(?<!\")(?<=:)\\\\b(\\\\d{17,}|(?:[9](?:[1-9]07199254740991|0[1-9]7199254740991|00[8-9]199254740991|007[2-9]99254740991|007199[3-9]54740991|0071992[6-9]4740991|00719925[5-9]740991|007199254[8-9]40991|0071992547[5-9]0991|00719925474[1-9]991|00719925474099[2-9])))(?=[,\\\\}\\\\]]|$)',\"g\"),e=n.replace(t,o=>`\"${o}n\"`);return JSON.parse(e,(o,r)=>typeof r==\"string\"&&r.match(/^\\d+n$/)?BigInt(r.substring(0,r.length-1)):r)};function f(n){if(typeof n!=\"string\")throw new Error(`Cannot safe json parse value of type ${typeof n}`);try{return i(n)}catch(t){return console.error(\"safeJsonParse error:\",t),n}}function a(n){return typeof n==\"string\"?n:s(n)||\"\"}export{f as safeJsonParse,a as safeJsonStringify};\n//# sourceMappingURL=index.es.js.map\n","import { safeJsonParse } from \"@cosmoskitconnect/safe-json\";\n\nexport function parseEntry(entry: [string, string | null]): [string, any] {\n  return [entry[0], safeJsonParse(entry[1] ?? \"\")];\n}\n","import AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { safeJsonParse, safeJsonStringify } from \"@cosmoskitconnect/safe-json\";\n\nimport { parseEntry, IKeyValueStorage } from \"../shared\";\n\nexport class KeyValueStorage implements IKeyValueStorage {\n  private readonly asyncStorage = AsyncStorage;\n\n  public async getKeys(): Promise<string[]> {\n    // AsyncStorage.getAllKeys technically has `Promise<readonly string[]>` as return type.\n    // Using an explicit cast here to avoid the `readonly` causing breakage with `IKeyValueStorage`.\n    return this.asyncStorage.getAllKeys() as Promise<string[]>;\n  }\n\n  public async getEntries<T = any>(): Promise<[string, T][]> {\n    const keys = await this.getKeys();\n    const entries = await this.asyncStorage.multiGet(keys);\n    return entries.map(parseEntry);\n  }\n\n  public async getItem<T = any>(key: string): Promise<T | undefined> {\n    const item = await this.asyncStorage.getItem(key);\n    if (typeof item === \"undefined\" || item === null) {\n      return undefined;\n    }\n    // TODO: fix this annoying type casting\n    return safeJsonParse(item) as T;\n  }\n\n  public async setItem<T = any>(key: string, value: T): Promise<void> {\n    await this.asyncStorage.setItem(key, safeJsonStringify(value));\n  }\n\n  public async removeItem(key: string): Promise<void> {\n    await this.asyncStorage.removeItem(key);\n  }\n}\n\nexport default KeyValueStorage;\n"],"names":["n","t","i","a","entry","_a","safeJsonParse","AsyncStorage","keys","parseEntry","key","item","value","safeJsonStringify"],"mappings":";;;;;;;;;;AAAA,MAAM,CAAA,CAAEA,CAAG,EAAA,IAAA,CAAK,SAAUA,CAAAA,CAAAA,CAAE,CAACC,CAAE,CAAA,CAAA,GAAI,OAAO,CAAA,EAAG,QAAS,CAAA,CAAA,CAAE,UAAW,CAAA,GAAA,CAAI,CAAC,CAAA,CAAEC,CAAEF,CAAAA,CAAAA,EAAG,CAAC,MAAMC,CAAAA,CAAE,IAAI,MAAA,CAAO,iRAAkR,CAAA,GAAG,EAAE,CAAED,CAAAA,CAAAA,CAAE,OAAQC,CAAAA,CAAAA,CAAE,CAAG,EAAA,CAAA,CAAA,EAAI,KAAK,CAAE,CAAA,OAAO,IAAK,CAAA,KAAA,CAAM,CAAE,CAAA,CAAC,EAAE,CAAI,GAAA,OAAO,CAAG,EAAA,QAAA,EAAU,CAAE,CAAA,KAAA,CAAM,QAAQ,CAAA,CAAE,MAAO,CAAA,CAAA,CAAE,SAAU,CAAA,CAAA,CAAE,CAAE,CAAA,MAAA,CAAO,CAAC,CAAC,CAAA,CAAE,CAAC,CAAC,CAAE,CAAA,SAAS,EAAED,CAAE,CAAA,CAAC,GAAG,OAAOA,CAAG,EAAA,QAAA,CAAS,MAAM,IAAI,KAAA,CAAM,CAAwC,qCAAA,EAAA,OAAOA,CAAG,CAAA,CAAA,CAAA,CAAE,GAAG,CAAC,OAAOE,CAAAA,CAAEF,CAAC,CAAC,CAAOC,MAAAA,CAAAA,CAAN,CAAS,OAAO,OAAA,CAAQ,KAAM,CAAA,sBAAA,CAAuBA,CAAC,CAAA,CAAED,CAAC,CAAC,CAAC,SAASG,CAAAA,CAAEH,CAAE,CAAA,CAAC,OAAO,OAAOA,CAAAA,EAAG,QAASA,CAAAA,CAAAA,CAAE,CAAEA,CAAAA,CAAC,CAAG,EAAA,EAAE;;ACE3tB,SAAS,WAAWI,CAA+C,CAAA,CAF1E,IAAAC,CAAAA,CAGE,OAAO,CAACD,EAAM,CAAC,CAAA,CAAGE,CAAcD,CAAAA,CAAAA,CAAAA,CAAAD,CAAM,CAAA,CAAC,IAAP,IAAAC,CAAAA,CAAAA,CAAY,EAAE,CAAC,CACjD;;ACCO,MAAM,eAA4C,CAAlD,WAAA,EAAA,CACL,KAAiB,YAAeE,CAAAA,sBAAAA,CAEhC,MAAa,OAAA,EAA6B,CAGxC,OAAO,KAAK,YAAa,CAAA,UAAA,EAC3B,CAEA,MAAa,YAA8C,CACzD,MAAMC,CAAO,CAAA,MAAM,IAAK,CAAA,OAAA,GAExB,OADgB,CAAA,MAAM,KAAK,YAAa,CAAA,QAAA,CAASA,CAAI,CACtC,EAAA,GAAA,CAAIC,UAAU,CAC/B,CAEA,MAAa,QAAiBC,CAAqC,CAAA,CACjE,MAAMC,CAAO,CAAA,MAAM,KAAK,YAAa,CAAA,OAAA,CAAQD,CAAG,CAChD,CAAA,GAAI,SAAOC,CAAS,EAAA,WAAA,EAAeA,IAAS,IAI5C,CAAA,CAAA,OAAOL,EAAcK,CAAI,CAC3B,CAEA,MAAa,OAAiBD,CAAAA,CAAAA,CAAaE,EAAyB,CAClE,MAAM,KAAK,YAAa,CAAA,OAAA,CAAQF,EAAKG,CAAkBD,CAAAA,CAAK,CAAC,EAC/D,CAEA,MAAa,WAAWF,CAA4B,CAAA,CAClD,MAAM,IAAK,CAAA,YAAA,CAAa,WAAWA,CAAG,EACxC,CACF;;;;;"}