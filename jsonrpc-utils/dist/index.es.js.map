{"version":3,"file":"index.es.js","sources":["../src/constants.ts","../src/error.ts","../src/env.ts","../src/format.ts","../src/routing.ts","../src/url.ts","../src/validators.ts"],"sourcesContent":["export const PARSE_ERROR = \"PARSE_ERROR\";\nexport const INVALID_REQUEST = \"INVALID_REQUEST\";\nexport const METHOD_NOT_FOUND = \"METHOD_NOT_FOUND\";\nexport const INVALID_PARAMS = \"INVALID_PARAMS\";\nexport const INTERNAL_ERROR = \"INTERNAL_ERROR\";\nexport const SERVER_ERROR = \"SERVER_ERROR\";\n\nexport const RESERVED_ERROR_CODES = [-32700, -32600, -32601, -32602, -32603];\nexport const SERVER_ERROR_CODE_RANGE = [-32000, -32099];\n\nexport const STANDARD_ERROR_MAP = {\n  [PARSE_ERROR]: { code: -32700, message: \"Parse error\" },\n  [INVALID_REQUEST]: { code: -32600, message: \"Invalid Request\" },\n  [METHOD_NOT_FOUND]: { code: -32601, message: \"Method not found\" },\n  [INVALID_PARAMS]: { code: -32602, message: \"Invalid params\" },\n  [INTERNAL_ERROR]: { code: -32603, message: \"Internal error\" },\n  [SERVER_ERROR]: { code: -32000, message: \"Server error\" },\n};\n\nexport const DEFAULT_ERROR = SERVER_ERROR;\n","import { ErrorResponse } from \"./types\";\nimport {\n  SERVER_ERROR_CODE_RANGE,\n  RESERVED_ERROR_CODES,\n  STANDARD_ERROR_MAP,\n  DEFAULT_ERROR,\n} from \"./constants\";\nimport { JsonRpcError, JsonRpcValidation } from \"@cosmoskitconnect/jsonrpc-types\";\n\nexport function isServerErrorCode(code: number): boolean {\n  return code <= SERVER_ERROR_CODE_RANGE[0] && code >= SERVER_ERROR_CODE_RANGE[1];\n}\n\nexport function isReservedErrorCode(code: number): boolean {\n  return RESERVED_ERROR_CODES.includes(code);\n}\n\nexport function isValidErrorCode(code: number): boolean {\n  return typeof code === \"number\";\n}\n\nexport function getError(type: string): ErrorResponse {\n  if (!Object.keys(STANDARD_ERROR_MAP).includes(type)) {\n    return STANDARD_ERROR_MAP[DEFAULT_ERROR];\n  }\n  return STANDARD_ERROR_MAP[type];\n}\n\nexport function getErrorByCode(code: number): ErrorResponse {\n  const match = Object.values(STANDARD_ERROR_MAP).find((e) => e.code === code);\n  if (!match) {\n    return STANDARD_ERROR_MAP[DEFAULT_ERROR];\n  }\n  return match;\n}\n\nexport function validateJsonRpcError(response: JsonRpcError): JsonRpcValidation {\n  if (typeof response.error.code === \"undefined\") {\n    return { valid: false, error: \"Missing code for JSON-RPC error\" };\n  }\n  if (typeof response.error.message === \"undefined\") {\n    return { valid: false, error: \"Missing message for JSON-RPC error\" };\n  }\n  if (!isValidErrorCode(response.error.code)) {\n    return {\n      valid: false,\n      error: `Invalid error code type for JSON-RPC: ${response.error.code}`,\n    };\n  }\n  if (isReservedErrorCode(response.error.code)) {\n    const error = getErrorByCode(response.error.code);\n    if (\n      error.message !== STANDARD_ERROR_MAP[DEFAULT_ERROR].message &&\n      response.error.message === error.message\n    ) {\n      return {\n        valid: false,\n        error: `Invalid error code message for JSON-RPC: ${response.error.code}`,\n      };\n    }\n  }\n  return { valid: true };\n}\n\nexport function parseConnectionError(e: Error, url: string, type: string): Error {\n  return e.message.includes(\"getaddrinfo ENOTFOUND\") || e.message.includes(\"connect ECONNREFUSED\")\n    ? new Error(`Unavailable ${type} RPC url at ${url}`)\n    : e;\n}\n","import { isNode } from \"@cosmoskitconnect/environment\";\n\n// for backwards-compatibility\nexport const isNodeJs = isNode;\n\nexport * from \"@cosmoskitconnect/environment\";\n","import { getError, getErrorByCode, isReservedErrorCode } from \"./error\";\nimport { INTERNAL_ERROR, SERVER_ERROR } from \"./constants\";\nimport { ErrorResponse, JsonRpcError, JsonRpcRequest, JsonRpcResult } from \"./types\";\n\nclass IncrementalRandomGenerator {\n  private initialValue: number;\n  private i = 1;\n\n  constructor(bits: 8 | 16 | 32) {\n    const typedArray =\n      bits === 8 ? new Uint8Array(1) : bits === 16 ? new Uint16Array(1) : new Uint32Array(1);\n    this.initialValue = crypto.getRandomValues(typedArray)[0];\n  }\n\n  getNextValue() {\n    return this.initialValue + this.i++;\n  }\n}\n\nconst uint8Generator = new IncrementalRandomGenerator(8);\nconst uint16Generator = new IncrementalRandomGenerator(16);\n\nexport function payloadId(): number {\n  const date = Date.now() * 1000;\n  const extra = uint8Generator.getNextValue();\n  return date + extra;\n}\n\nexport function getBigIntRpcId(): bigint {\n  const date = BigInt(Date.now()) * BigInt(1000000);\n  const extra = BigInt(uint16Generator.getNextValue());\n  return date + extra;\n}\n\nexport function formatJsonRpcRequest<T = any>(\n  method: string,\n  params: T,\n  id?: number,\n): JsonRpcRequest<T> {\n  return {\n    id: id || payloadId(),\n    jsonrpc: \"2.0\",\n    method,\n    params,\n  };\n}\n\nexport function formatJsonRpcResult<T = any>(id: number, result: T): JsonRpcResult<T> {\n  return {\n    id,\n    jsonrpc: \"2.0\",\n    result,\n  };\n}\n\nexport function formatJsonRpcError(\n  id: number,\n  error?: string | ErrorResponse,\n  data?: string,\n): JsonRpcError {\n  return {\n    id,\n    jsonrpc: \"2.0\",\n    error: formatErrorMessage(error, data),\n  };\n}\n\nexport function formatErrorMessage(error?: string | ErrorResponse, data?: string): ErrorResponse {\n  if (typeof error === \"undefined\") {\n    return getError(INTERNAL_ERROR);\n  }\n  if (typeof error === \"string\") {\n    error = {\n      ...getError(SERVER_ERROR),\n      message: error,\n    };\n  }\n  if (typeof data !== \"undefined\") {\n    error.data = data;\n  }\n  if (isReservedErrorCode(error.code)) {\n    error = getErrorByCode(error.code);\n  }\n  return error;\n}\n","export function isValidRoute(route: string): boolean {\n  if (route.includes(\"*\")) {\n    return isValidWildcardRoute(route);\n  }\n  if (/\\W/g.test(route)) {\n    return false;\n  }\n  return true;\n}\n\nexport function isValidDefaultRoute(route: string): boolean {\n  return route === \"*\";\n}\n\nexport function isValidWildcardRoute(route: string): boolean {\n  if (isValidDefaultRoute(route)) {\n    return true;\n  }\n  if (!route.includes(\"*\")) {\n    return false;\n  }\n  if (route.split(\"*\").length !== 2) {\n    return false;\n  }\n  if (route.split(\"*\").filter((x) => x.trim() === \"\").length !== 1) {\n    return false;\n  }\n  return true;\n}\n\nexport function isValidLeadingWildcardRoute(route: string): boolean {\n  return !isValidDefaultRoute(route) && isValidWildcardRoute(route) && !route.split(\"*\")[0].trim();\n}\n\nexport function isValidTrailingWildcardRoute(route: string): boolean {\n  return !isValidDefaultRoute(route) && isValidWildcardRoute(route) && !route.split(\"*\")[1].trim();\n}\n","const HTTP_REGEX = \"^https?:\";\n\nconst WS_REGEX = \"^wss?:\";\n\nfunction getUrlProtocol(url: string): string | undefined {\n  const matches = url.match(new RegExp(/^\\w+:/, \"gi\"));\n  if (!matches || !matches.length) return;\n  return matches[0];\n}\n\nfunction matchRegexProtocol(url: string, regex: string): boolean {\n  const protocol = getUrlProtocol(url);\n  if (typeof protocol === \"undefined\") return false;\n  return new RegExp(regex).test(protocol);\n}\n\nexport function isHttpUrl(url: string): boolean {\n  return matchRegexProtocol(url, HTTP_REGEX);\n}\n\nexport function isWsUrl(url: string): boolean {\n  return matchRegexProtocol(url, WS_REGEX);\n}\n\nexport function isLocalhostUrl(url: string): boolean {\n  return new RegExp(\"wss?://localhost(:d{2,5})?\").test(url);\n}\n","import {\n  JsonRpcError,\n  JsonRpcPayload,\n  JsonRpcRequest,\n  JsonRpcResponse,\n  JsonRpcResult,\n  JsonRpcValidation,\n  JsonRpcValidationInvalid,\n} from \"./types\";\n\nexport function isJsonRpcPayload(payload: any): payload is JsonRpcPayload {\n  return (\n    typeof payload === \"object\" &&\n    \"id\" in payload &&\n    \"jsonrpc\" in payload &&\n    payload.jsonrpc === \"2.0\"\n  );\n}\n\nexport function isJsonRpcRequest<T = any>(payload: JsonRpcPayload): payload is JsonRpcRequest<T> {\n  return isJsonRpcPayload(payload) && \"method\" in payload;\n}\n\nexport function isJsonRpcResponse<T = any>(payload: JsonRpcPayload): payload is JsonRpcResponse<T> {\n  return isJsonRpcPayload(payload) && (isJsonRpcResult(payload) || isJsonRpcError(payload));\n}\n\nexport function isJsonRpcResult<T = any>(payload: JsonRpcPayload): payload is JsonRpcResult<T> {\n  return \"result\" in payload;\n}\n\nexport function isJsonRpcError(payload: JsonRpcPayload): payload is JsonRpcError {\n  return \"error\" in payload;\n}\n\nexport function isJsonRpcValidationInvalid(\n  validation: JsonRpcValidation,\n): validation is JsonRpcValidationInvalid {\n  return \"error\" in validation && validation.valid === false;\n}\n"],"names":["code","SERVER_ERROR_CODE_RANGE","RESERVED_ERROR_CODES","type","STANDARD_ERROR_MAP","DEFAULT_ERROR","match","e","response","error","url","isNode","IncrementalRandomGenerator","bits","typedArray","uint8Generator","uint16Generator","date","extra","method","params","id","result","data","getError","INTERNAL_ERROR","__spreadProps","__spreadValues","SERVER_ERROR","isReservedErrorCode","getErrorByCode","route","x","HTTP_REGEX","WS_REGEX","getUrlProtocol","matches","matchRegexProtocol","regex","protocol","payload","validation"],"mappings":"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"}