import o from"isomorphic-unfetch";const i="https://history.walletconnect.com",g=86400*1e3;class n{constructor(s,t){this.core=s,this.messageResponse=t}async injectIntoRelayer(){const{messages:s,topic:t}=this.messageResponse;for(const{message:e}of s)this.core.relayer.messages.has(t,e)||(await this.core.relayer.messages.set(t,e),this.core.relayer.events.emit("relayer_message",{topic:t,publishedAt:Date.now(),message:e}))}}class y{constructor(s,t=i){this.core=s,this.historyUrl=t,this.jwt=""}async registerTags(s,t=i){try{await o(`${t}/register`,{method:"POST",body:JSON.stringify(s),headers:{"Content-Type":"application/json",Authorization:`Bearer ${await this.getJwt()}`}})}catch(e){throw new Error(`[HistoryClient] Failed to register tags: ${JSON.stringify(e)}`)}}async getMessages(s,t=i){const e=Object.entries(s).map(([r,a])=>[r,a.toString()]),h=new URLSearchParams(e);try{const r=`${t}/messages?${h.toString()}`,a=await(await o(r,{method:"GET",headers:{"Content-Type":"application/json"}})).json();return new n(this.core,a)}catch(r){throw new Error(`[HistoryClient] Failed to fetch messages: ${JSON.stringify(r)}`)}}async getJwt(){return this.jwt?this.jwt:(this.jwt=await this.core.crypto.signJWT(this.historyUrl),this.jwt)}}export{g as DAY_IN_MS,i as DEFAULT_HISTORY_URL,n as HistoricalMessages,y as HistoryClient};
//# sourceMappingURL=index.es.js.map
